diff -ruN critterding-beta14/src/common/be_command_system.cpp critterding-beta14_P/src/common/be_command_system.cpp
--- critterding-beta14/src/common/be_command_system.cpp	2011-09-11 00:01:23.000000000 +0200
+++ critterding-beta14_P/src/common/be_command_system.cpp	2021-02-01 20:38:01.769455137 +0100
@@ -10,9 +10,9 @@
 BeCommandSystem::BeCommandSystem()
 {
 	Settings* const	settings = Settings::Instance();
-	registerStringCommand("settings_saveprofile", boost::bind(&Settings::saveProfile, settings, _1));
-	registerStringCommand("settings_increase", boost::bind(&Settings::increaseCVar, settings, _1, 1));
-	registerStringCommand("settings_decrease", boost::bind(&Settings::decreaseCVar, settings, _1, 1));
+	registerStringCommand("settings_saveprofile", boost::bind(&Settings::saveProfile, settings, boost::placeholders::_1));
+	registerStringCommand("settings_increase", boost::bind(&Settings::increaseCVar, settings, boost::placeholders::_1, 1));
+	registerStringCommand("settings_decrease", boost::bind(&Settings::decreaseCVar, settings, boost::placeholders::_1, 1));
 }
 
 void BeCommandSystem::registerVoidCommand(const std::string& name, FunctionVoid function)
diff -ruN critterding-beta14/src/scenes/critterding/evolution.cpp critterding-beta14_P/src/scenes/critterding/evolution.cpp
--- critterding-beta14/src/scenes/critterding/evolution.cpp	2013-09-28 00:33:54.000000000 +0200
+++ critterding-beta14_P/src/scenes/critterding/evolution.cpp	2021-02-01 20:42:22.558181137 +0100
@@ -148,7 +148,7 @@
 // 	}
 	
  	BeCommandSystem::Instance()->registerVoidCommand("quit", boost::bind(&Evolution::quit, this));
-	BeCommandSystem::Instance()->registerIntCommand("cs_unregister", boost::bind(&Evolution::unregisterCritterVID, this, _1));
+	BeCommandSystem::Instance()->registerIntCommand("cs_unregister", boost::bind(&Evolution::unregisterCritterVID, this, boost::placeholders::_1));
 	BeCommandSystem::Instance()->registerVoidCommand("cs_clear", boost::bind(&Evolution::clear, this));
 
 	BeCommandSystem::Instance()->registerVoidCommand("decreaseenergy", boost::bind(&Evolution::decreaseenergy, this));
@@ -172,8 +172,8 @@
 	BeCommandSystem::Instance()->registerVoidCommand("camera_lookleft", boost::bind(&Evolution::camera_lookleft, this));
 	BeCommandSystem::Instance()->registerVoidCommand("camera_lookright", boost::bind(&Evolution::camera_lookright, this));
 
-	BeCommandSystem::Instance()->registerFloatCommand("camera_lookleftright_mouse", boost::bind(&Evolution::camera_lookleftright_mouse, this, _1));
-	BeCommandSystem::Instance()->registerFloatCommand("camera_lookupdown_mouse", boost::bind(&Evolution::camera_lookupdown_mouse, this, _1));
+	BeCommandSystem::Instance()->registerFloatCommand("camera_lookleftright_mouse", boost::bind(&Evolution::camera_lookleftright_mouse, this, boost::placeholders::_1));
+	BeCommandSystem::Instance()->registerFloatCommand("camera_lookupdown_mouse", boost::bind(&Evolution::camera_lookupdown_mouse, this, boost::placeholders::_1));
 		
 	
 	BeCommandSystem::Instance()->registerVoidCommand("camera_rollleft", boost::bind(&Evolution::camera_rollleft, this));
@@ -212,13 +212,13 @@
 	BeCommandSystem::Instance()->registerVoidCommand("cs_resetage", boost::bind(&WorldB::resetageSelectedCritter, world));
 	BeCommandSystem::Instance()->registerVoidCommand("cs_follow", boost::bind(&WorldB::followCritter, world));
 
-	BeCommandSystem::Instance()->registerIntCommand("cs_select", boost::bind(&Evolution::gui_selectCritter, this, _1));
-	BeCommandSystem::Instance()->registerIntCommand("cs_select_species", boost::bind(&Evolution::gui_selectSpecies, this, _1));
-	BeCommandSystem::Instance()->registerStringCommand("gui_togglepanel", boost::bind(&Evolution::canvas_swapchild, this, _1));
+	BeCommandSystem::Instance()->registerIntCommand("cs_select", boost::bind(&Evolution::gui_selectCritter, this, boost::placeholders::_1));
+	BeCommandSystem::Instance()->registerIntCommand("cs_select_species", boost::bind(&Evolution::gui_selectSpecies, this, boost::placeholders::_1));
+	BeCommandSystem::Instance()->registerStringCommand("gui_togglepanel", boost::bind(&Evolution::canvas_swapchild, this, boost::placeholders::_1));
 	BeCommandSystem::Instance()->registerVoidCommand("gui_toggle", boost::bind(&Evolution::gui_swap, this));
 
-	BeCommandSystem::Instance()->registerFloatCommand("movepickedbodyX", boost::bind(&Evolution::movePickedBodyX, this, _1));
-	BeCommandSystem::Instance()->registerFloatCommand("movepickedbodyY", boost::bind(&Evolution::movePickedBodyY, this, _1));
+	BeCommandSystem::Instance()->registerFloatCommand("movepickedbodyX", boost::bind(&Evolution::movePickedBodyX, this, boost::placeholders::_1));
+	BeCommandSystem::Instance()->registerFloatCommand("movepickedbodyY", boost::bind(&Evolution::movePickedBodyY, this, boost::placeholders::_1));
 /*	BeCommandSystem::Instance()->registerVoidCommand("canvas_press", boost::bind(&Evolution::canvas_press, this));
 	BeCommandSystem::Instance()->registerVoidCommand("canvas_release", boost::bind(&Evolution::canvas_release, this));
 	BeCommandSystem::Instance()->registerVoidCommand("canvas_pressAlt", boost::bind(&Evolution::canvas_pressAlt, this));
